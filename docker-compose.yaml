services:
  be:
    build:
      context: backend
      dockerfile: Dockerfile
    container_name: be
    restart: unless-stopped
    ports:
      - 8000:8000
    volumes:
      - ./backend/db.sqlite3:/app/db.sqlite3
      - ./backend/media:/app/media
      - ./backend/logs:/app/logs
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "8000"]
      interval: 5s
      timeout: 15s
      retries: 3
    depends_on:
      - elasticsearch
    develop:
      watch:
        - action: rebuild
          path: backend/requirements.txt
          target: /app/requirements.txt
        - action: sync
          path: backend/docusecure
          target: /app/docusecure
        - action: sync
          path: backend/docs
          target: /app/docs
        - action: sync
          path: backend/search
          target: /app/search

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.16.6
    container_name: elasticsearch
    ports:
      - 9200:9200
      - 9300:9300
    volumes:
      - es:/usr/share/elasticsearch/data
    environment:
      discovery.type: single-node
      xpack.security.enabled: false
      xpack.security.http.ssl.enabled: false

  kibana:
    image: docker.elastic.co/kibana/kibana:8.16.6
    container_name: kibana
    ports:
      - 5601:5601
    depends_on:
      - elasticsearch
    profiles:
      - efk

  filebeat:
    container_name: filebeat
    image: docker.elastic.co/beats/filebeat:8.16.6
    volumes:
      - ./filebeat.yaml:/usr/share/filebeat/filebeat.yml:ro
      - ./backend/logs:/usr/share/filebeat/logs
    environment:
      ELASTICSEARCH_URL: http://elasticsearch:9200
    depends_on:
      - elasticsearch
    profiles:
      - efk

networks:
  default:
    driver: bridge

volumes:
  es:
