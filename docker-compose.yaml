services:
  be:
    build:
      context: backend
      dockerfile: Dockerfile
    container_name: be
    restart: unless-stopped
    ports:
      - 8000:8000
    volumes:
      - ./backend/db.sqlite3:/app/db.sqlite3
      - ./backend/media:/app/media
      - ./backend/logs:/app/logs
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "8000"]
      interval: 5s
      timeout: 15s
      retries: 3
    depends_on:
      - elasticsearch
    networks:
      - docusecure
    develop:
      watch:
        - action: rebuild
          path: backend/requirements.txt
          target: /app/requirements.txt
        - action: sync
          path: backend/docusecure
          target: /app/docusecure
        - action: sync
          path: backend/templates
          target: /app/templates
        - action: sync
          path: backend/static
          target: /app/static
        - action: sync
          path: backend/docs
          target: /app/docs
        - action: sync
          path: backend/accounts
          target: /app/accounts
        - action: sync
          path: backend/search
          target: /app/search
        - action: sync
          path: backend/extapi
          target: /app/extapi

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.16.6
    container_name: elasticsearch
    ports:
      - 9200:9200
      - 9300:9300
    volumes:
      - es:/usr/share/elasticsearch/data
    networks:
      - docusecure
    environment:
      discovery.type: single-node
      xpack.security.enabled: false
      xpack.security.http.ssl.enabled: false

  kibana:
    image: docker.elastic.co/kibana/kibana:8.16.6
    container_name: kibana
    ports:
      - 5601:5601
    networks:
      - docusecure
    depends_on:
      - elasticsearch
    profiles:
      - efk
      - all

  filebeat:
    container_name: filebeat
    image: docker.elastic.co/beats/filebeat:8.16.6
    volumes:
      - ./filebeat.yaml:/usr/share/filebeat/filebeat.yml:ro
      - ./backend/logs:/usr/share/filebeat/logs
    networks:
      - docusecure
    environment:
      ELASTICSEARCH_URL: http://elasticsearch:9200
    depends_on:
      - elasticsearch
    profiles:
      - efk
      - all

  traefik:
    image: traefik:v3.3.4
    container_name: traefik
    # security_opt:
    #   - no-new-privileges:true
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - letsencrypt:/letsencrypt
      # - ./traefik.yaml:/etc/treafik.yaml:ro
    ports:
      - 80:80
      - 443:443
      - 8080:8080
    profiles:
      - treafik
    networks:
      - docusecure
    command:
      - --api.dashboard=true
      - --log.level=DEBUG
      #- --log.filepath=/var/log/traefik.log
      - --accesslog=true
      #- --accesslog.filepath=/var/log/traefik-access.log
      - --providers.docker.network=docusecure
      - --providers.docker.exposedByDefault=false
      - --entrypoints.web.address=:80
      - --entrypoints.web.http.redirections.entrypoint.to=websecure
      - --entryPoints.web.http.redirections.entrypoint.scheme=https
      - --entrypoints.websecure.address=:443
      # remove next line when using Traefik v2
      - --entrypoints.websecure.asDefault=true
      - --entrypoints.websecure.http.tls.certresolver=myresolver
      - --certificatesresolvers.myresolver.acme.email=contact@omareloui.com
      - --certificatesresolvers.myresolver.acme.tlschallenge=true
      - --certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json
    labels:
      - traefik.enable=true
      - traefik.http.routers.mydashboard.rule=Host(`traefik.localhost`)
      - traefik.http.routers.mydashboard.service=api@internal
      - traefik.http.routers.mydashboard.middlewares=myauth
      - traefik.http.middlewares.myauth.basicauth.users=test:$$apr1$$H6uskkkW$$IgXLP6ewTrSuBkTrqE8wj/

  caddy:
    image: caddy:2.9.1
    container_name: caddy
    cap_add:
      - NET_ADMIN
    ports:
      - 80:80
      - 433:433
      - 443:443/udp
    restart: unless-stopped
    volumes:
      - caddy-config:/config
      - caddy-data:/data
      - ./Caddyfile:/etc/caddy/Caddyfile
    networks:
      - docusecure
    profiles:
      - caddy
      - all

networks:
  docusecure:
    name: docusecure

volumes:
  es:
  caddy-config:
  caddy-data:
  letsencrypt:
    name: letsencrypt
